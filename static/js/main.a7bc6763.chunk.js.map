{"version":3,"sources":["Common.jsx","Home.jsx","About.jsx","Sdata.js","Card.jsx","Services.jsx","Contact.jsx","Navbar.jsx","App.js","serviceWorker.js","index.js","images/google.png"],"names":["Common","props","id","className","name","to","visit","btname","src","img","alt","Home","web","About","yak","Sdata","imgsrc","title","Card","class","Services","map","val","ind","Contact","for","type","aria-describedby","placeholder","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.a7bc6763.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { NavLink} from \"react-router-dom\"\r\nconst Common =(props)=>{\r\n    return(\r\n        <>\r\n          <section id=\"header\" className=\"d-flex align-items-center\">\r\n          <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 mx-auto\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6 pt-5 pt-lg-0 order-2 order-lg-1 d-flex justify-content-center flex-column\">\r\n                        <h1> {props.name} <strong className=\"brand-name\">Arun Bolte</strong></h1>\r\n                        <h2 className=\"my-3\">\r\n                          We are team of talented Developer\r\n                        </h2>\r\n                        <div className=\"mt-3\">\r\n                          <NavLink to={props.visit} className=\"btn-get-started\">\r\n                            {props.btname}\r\n                            </NavLink>\r\n    \r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-6 order-1 order-lg-2 header-img\">\r\n                        <img src={props.img} className=\"img-fluid animated\" alt=\"gg\"/>\r\n                      </div>\r\n                      </div>\r\n                      </div>\r\n                      </div>\r\n                      </div>\r\n          </section>\r\n        </>\r\n      );\r\n}\r\nexport default Common","import React from 'react';\r\nimport web from \"../src/images/google.png\";\r\nimport Common from \"./Common\"\r\nfunction Home() {\r\n  return (\r\n    <>\r\n    <Common name=\"Grow your Buiseness with\" \r\n    img={web} \r\n    visit=\"/service\"\r\n    btname=\"Get Started\" />\r\n     </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Common from './Common';\r\nimport yak from \"../src/images/google.png\"\r\nfunction About() {\r\n  return (\r\n    <>\r\n       <Common name=\"Welcome to About Page...\" \r\n    img={yak} \r\n    visit=\"/contact\"\r\n\r\n    \r\n    btname=\"Contact Now\"/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import web from \"../src/images/google.png\"\r\n\r\nconst Sdata=[\r\n    {\r\n        imgsrc:web,\r\n        title:\"Web developnment\"\r\n    },\r\n    {\r\n        imgsrc:web,\r\n        title:\"Web developnment\"\r\n    },\r\n    {\r\n        imgsrc:web,\r\n        title:\"Web developnment\"\r\n    },\r\n    {\r\n        imgsrc:web,\r\n        title:\"Web developnment\"\r\n    },\r\n    {\r\n        imgsrc:web,\r\n        title:\"Web developnment\"\r\n    },\r\n    {\r\n        imgsrc:web,\r\n        title:\"Web developnment\"\r\n    },\r\n\r\n]\r\nexport default Sdata","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst Card =(props)=>\r\n{\r\n    return (\r\n        <>\r\n        <div className=\"col-md-4 col-10 mx-auto\">\r\n            < div className=\"card\">\r\n                <img src={props.imgsrc} class=\"card-img-top\" alt=\"...\" />\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">{props.title}</h5>\r\n                    <p class=\"card-text\">\r\n                        Some quick example text to build on the card title and also show the cards content\r\n                    </p>\r\n                    <NavLink to=\"\" class=\"btn btn-primary\">\r\n                        Go somewhere\r\n                    </NavLink>\r\n                </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Sdata from \"./Sdata\"\r\nimport Card from './Card';\r\n\r\nfunction Services() {\r\n  return (\r\n    <>\r\n     <div className=\"my-5\">\r\n       <h1 className=\"text-center\"> Our Services </h1>\r\n       </div>\r\n       <div className=\"container-fluid mb-1\">\r\n         <div className=\"row\">\r\n           <div className=\"col-10 mx-auto\">\r\n             <div className=\"row gy-5\">\r\n               {\r\n                 Sdata.map((val,ind)=>\r\n                 {\r\n                   return <Card imgsrc={val.imgsrc}\r\n                   title={val.title}/>\r\n                 })\r\n               }\r\n               </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Services;\r\n","import React from 'react';\r\n\r\n\r\nfunction Contact() {\r\n  return (\r\n    <>\r\n      <form className=\"container\">\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputEmail1\">Email address</label>\r\n    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\r\n    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputPassword1\">Password</label>\r\n    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"/>\r\n  </div>\r\n  <div class=\"form-check\">\r\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\"/>\r\n    <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\"\r\nimport { NavLink } from 'react-router-dom'\r\nconst Navbar = ()=>{\r\n    return(\r\n        <>\r\n        <div className=\"container-fluid nav_bg\">\r\n            <div className=\"row\">\r\n                <div className=\"col-10 mx-auto\">\r\n              \r\n<nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n  <NavLink className=\"navbar-brand\" to=\"/\">React</NavLink>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav ml-auto\">\r\n      <li className=\"nav-item active\">\r\n        <NavLink className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/service\">Services</NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/about\">About</NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/contact\">Contact</NavLink>\r\n      </li>\r\n\r\n</ul>\r\n\r\n</div>\r\n</nav>\r\n</div>\r\n            </div>\r\n            </div>\r\n</>\r\n)\r\n}\r\nexport default Navbar","import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Home from \"./Home\"\nimport About from \"./About\"\nimport Services from \"./Services\"\nimport Contact from \"./Contact\"\nimport Navbar from \"./Navbar\"\nimport { Switch , Route , Redirect } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n    <Navbar/>\n    <Switch>\n      <Route exact path=\"/\" component={Home} /> \n      <Route exact path =\"/about\" component={About} />\n      <Route exact path=\"/service\" component={Services} /> \n      <Route exact path =\"/contact\" component={Contact} />\n      <Redirect to=\"/\"/>\n    </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/google.a0a65d37.png\";"],"sourceRoot":""}